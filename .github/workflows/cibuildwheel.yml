name: build

on:
  push:
    branches:
  pull_request:
  release:
    types:
      - published

jobs:

  source:
    name: Build source package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: docker://python
        with:
          args: 'sh -c "pip install build && python -m build --sdist"'

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*

  linux-wheels:
    name: Build binary packages for Linux
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14
        env:
          CIBW_ARCHS_LINUX: auto aarch64
          # Skip musllinux wheels, which take a long time to build because Numpy must be built from source
          # Skip PyPy wheels
          # Skip 32-bit Intel wheels
          CIBW_SKIP: "*musllinux* pp* *_i686"

      - uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*

  mac-wheels-x86:
    name: Build binary packages for macOS x86
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14
        env:
          CIBW_ARCHS_MACOS: "x86_64"
          CIBW_ENVIRONMENT_MACOS: F77=gfortran-11 F90=gfortran-11
          # Skip PyPy wheels
          # Skip 32-bit Intel wheels
          CIBW_SKIP: "pp* *_i686"
      - uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*

  mac-wheels-arm64:
    name: Build binary packages for macOS arm64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup gfortran for macOS arm64
        if: matrix.os == 'macos-latest'
        # Here, we fetch a forked gfortran compiler with
        # support for cross-compilation to arm64 targets
        # and change environment variables for the compiler
        # to utilise them. Added by @kokroo (Shiv Kokroo)
        uses: kokroo/cross-compile-fortran-macos@main

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14
        env:
          CIBW_ARCHS_MACOS: "arm64"
          CIBW_TEST_SKIP: "*-macosx_arm64"
          # Skip PyPy wheels
          CIBW_SKIP: "pp*"

      - uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: [source, linux-wheels, mac-wheels-x86, mac-wheels-arm64]
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
